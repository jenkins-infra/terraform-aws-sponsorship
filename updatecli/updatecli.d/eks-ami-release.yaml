name: Bump AMI release version for EKS managed node groups in terraform-aws-sponsorship/eks-cijenkinsio-agents-2.tf

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  getClusterKubernetesVersion:
    kind: hcl
    name: Retrieve the Kubernetes version used in the EKS cluster
    spec:
      file: eks-cijenkinsio-agents-2.tf
      path: module.cijenkinsio_agents_2.kubernetes_version

  getLatestAmiReleaseVersion:
    kind: shell
    name: Retrieve the ami_release_version version for Kubernetes {{ source "getClusterKubernetesVersion" }}
    dependson:
      - getClusterKubernetesVersion
    spec:
      command: |
        set -eux
        release_version=$(aws ssm get-parameters-by-path \
          --path "/aws/service/eks/optimized-ami/{{ source "getClusterKubernetesVersion" }}/" \
          --recursive \
          --query "Parameters[?contains(Name, 'amazon-linux-2023/arm64/standard/recommended')].Value" \
          --region us-east-2 \
          --output json | jq -r '.[0] | fromjson | .release_version')
        test -n "$release_version"
        echo "$release_version"
      environments:
        - name: PATH
        - name: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY

targets:
  upgradeAMIVersion:
    name: Update the AMI release version in terraform-aws-sponsorship/eks-cijenkinsio-agents-2.tf
    kind: hcl
    sourceid: getLatestAmiReleaseVersion
    spec:
      file: locals.tf
      path: locals.cijenkinsio_agents_2_ami_release_version
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump AMI release version for EKS managed node groups to {{ source "getLatestAmiReleaseVersion" }}
    spec:
      labels:
        - dependencies
        - eks-ami-release
